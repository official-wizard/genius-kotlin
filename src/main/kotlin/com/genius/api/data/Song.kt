package com.genius.api.data

import com.google.gson.JsonElement
import com.google.gson.annotations.SerializedName

data class Song(
    @SerializedName("annotation_count") val annotationCount: Int,
    @SerializedName("api_path") val apiPath: String,
    @SerializedName("apple_music_id") val appleMusicId: String,
    @SerializedName("apple_music_player_url") val appleMusicPlayerUrl: String,
    @SerializedName("artist_names") val artistNames: String,
    @SerializedName("description") val description: JsonElement,
    @SerializedName("embed_content") val embedContent: String,
    @SerializedName("featured_vide") val featuredVideo: Boolean,
    @SerializedName("full_title") val fullTitle: String,
    @SerializedName("header_image_thumbnail_url") val headerImageThumbnailUrl: String,
    @SerializedName("header_image_url") val headerImageUrl: String,
    @SerializedName("id") val id: Long,
    @SerializedName("language") val language: String,
    @SerializedName("lyrics_owner_id") val lyricsOwnerId: Long,
    @SerializedName("lyrics_state") val lyricsState: String,
    @SerializedName("path") val path: String,
    @SerializedName("primary_artist_names") val primaryArtistNames: String,
    @SerializedName("pyongs_count") val pyongsCount: Long,
    @SerializedName("recording_location") val recordingLocation: String?,
    @SerializedName("relationships_index_url") val relationshipsIndexUrl: String,
    @SerializedName("release_date") val releaseDate: String,
    @SerializedName("release_date_for_display") val releaseDateForDisplay: String,
    @SerializedName("release_date_with_abbreviated_month_for_display") val releaseDateWithAbbreviatedMonthForDisplay: String,
    @SerializedName("song_art_image_thumbnail_url") val songArtImageThumbnailUrl: String,
    @SerializedName("song_art_image_url") val songArtImageUrl: String,
    @SerializedName("stats") val stats: Stats,
    @SerializedName("title") val title: String,
    @SerializedName("title_with_features") val titleWithFeatured: String,
    @SerializedName("url") val url: String,
    @SerializedName("current_user_metadata") val currentUserMetadata: UserMetadata,
    @SerializedName("song_art_primary_color") val songArtPrimaryColor: String,
    @SerializedName("song_art_secondary_color") val songArtSecondaryColor: String,
    @SerializedName("song_art_text_color") val songArtTextColor: String,
    @SerializedName("album") val album: Album,
    @SerializedName("custom_performances") val customPerformances: List<Performance>,
    @SerializedName("description_annotation") val descriptionAnnotation: Annotation,
    @SerializedName("featured_artists") val featuredArtists: List<Artist>,
    @SerializedName("lyrics_marked_completed_by") val lyricsMarkedCompleteBy: User?,
    @SerializedName("lyrics_marked_staff_approved_by") val lyricsMarkedStaffApprovedBy: User?,
    @SerializedName("media") val media: List<Media>,
    @SerializedName("primary_artist") val primaryArtist: Artist,
    @SerializedName("primary_artists") val primaryArtists: List<Artist>,
    @SerializedName("producer_artists") val producerArtists: List<Artist>,
    @SerializedName("song_relationships") val songRelationships: List<Relationship>,
    @SerializedName("translation_songs") val translationSongs: List<Translation>,
    @SerializedName("verified_annotation_by") val verifiedAnnotationsBy: List<User>,
    @SerializedName("verified_contributors") val verifiedContributors: List<Contribution>,
    @SerializedName("verified_lyrics_by") val verifiedLyricsBy: List<User>,
    @SerializedName("writer_artists") val writerArtists: List<Artist>
)